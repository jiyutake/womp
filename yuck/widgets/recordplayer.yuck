
(deflisten recordanim :initial "{\"disc\": 0, \"hand\": -1}" "./scripts/recordhandanim.py")
(deflisten lyricsjson :initial '{"found": false, "lyrics": "Can\'t find lyrics :\("}' "./scripts/lyrics.py")
(defvar reveallyrics false)

(defwidget recordplayerwid []
  (box 
    :class "popup ${picomrunning ? '' : 'square'}"
    :orientation "h"
    :space-evenly false
    (box 
      :orientation "v"
      :space-evenly false
      ;; Crazy method to force element to not render when it doesn't need to
      (box
        (for i in {!recordplayerenable ? [0] : []}
          (normalcover))
        (for i in {!recordplayerenable ? [] : [0]}
          (dischand)))
      (box
        :orientation "v"
        :vexpand true
        (box 
          :orientation "v"
          :valign "center"
          :halign "center"
          :width 240
          (scroll
            :hscroll true
            :vscroll false
            (label 
              :markup "${playerctl.song}")) 
          (scroll
            :hscroll true
            :vscroll false
            :hexpand true
            (label 
              :class "artisttext"
              :markup "<b>${playerctl.artist}</b>"))) 
        (box
          :orientation "h"
          :space-evenly false
          :halign "center"
          (box
            :class "widget"
            :orientation "h"
            :halign "center"
            :valign "end"
            :width 180
            :height 80
            (button 
              :onclick "playerctl previous"
              (image 
                :image-height 30
                :path "./assets/icons/previous.svg")) 
            (button 
              :onclick "playerctl play-pause"
              (image 
                :image-height 30
                :path {playerctl.status == "Playing" ? "./assets/icons/pause.svg" : "./assets/icons/play.svg"})) 
            (button 
              :onclick "playerctl next"
              (image 
                :image-height 30
                :path "./assets/icons/next.svg"))) 
          (revealer
            :reveal {lyricsjson.found && picomrunning && lyricsenable}
            :transition "slideright"
            (box 
              :class "widget"   
              :style {reveallyrics ? "margin-right: 0px; padding-right: 16px; border-right: none; border-top-right-radius: 0; border-bottom-right-radius: 0;" : ""}
              :valign "end"
              :orientation "h"
              :width 120
              :height 80
              (image 
                :image-height 30
                :path "./assets/icons/lyrics.svg") 
              (button
                :onclick "${EWW_CMD} update reveallyrics=${!reveallyrics}"
                (transform
                  :transform-origin-x "50%"
                  :transform-origin-y "50%"
                  :rotate { reveallyrics ? 75 : 25}
                  (image 
                    :image-height 30
                    :path "./assets/icons/chevron.svg")))))))) 
    (revealer
      :reveal {reveallyrics && lyricsjson.found && picomrunning}
      :transition "slideright"
      (overlay
        (box 
          :class "widget"
          :style "border-bottom-left-radius: 0px; padding: 10px;"
          :halign "start"
          :width 330
          (scroll 
            :hexpand true 
            :vexpand true
            :hscroll false 
            :vscroll true 
            (label 
              :yalign 0
              :xalign 0
              :wrap true 
              :markup {lyricsjson.lyrics})))
        (box 
          :halign "start"
          :valign "end"
          :class "trickcover")
        (box 
          :halign "start"
          :valign "end"
          :class "trickcoverround")))))

(defwidget normalcover [] 
  (box 
    :width 300 
    :height 300
    (box
      :halign "center"
      :valign "center"
      :class "recordcover unround"
      :width  280
      :height 280
      :style "background-image: url('${pcover}');")))
    

(defwidget dischand [] 
  (overlay 
    (box 
      :width 300 
      :height 300)
    (box
      :halign "center"
      :valign "center"
      :class "recordshadow"
      :width 250
      :height 250) 
    (transform
      :transform-origin-x "50%"
      :transform-origin-y "50%"
      :rotate {powersaving ? 0 : recordanim.disc}
      (box 
        :halign "center"
        :valign "center"
        :class "recordcover ${powersaving ? 'unround' : ''}"
        :width  250
        :height 250
        :style "background-image: url('${pcover}');"))
    (box 
      :style {powersaving ? "opacity: 0;" : ""}
      :valign "center"
      :halign "center"
      :class "recordcenter")
    (box 
      :style {powersaving ? "opacity: 0;" : ""}
      :valign "center"
      :halign "center"
      :class "recordcentercenter")
    (transform
      :transform-origin-x 269
      :transform-origin-y 56
      :rotate {recordanim.hand}
      (box
        :visible {!powersaving}
        (image 
          :style "margin-top: 15px;"
          :path "./assets/icons/recordhand.svg"
          :valign "start"
          :halign "end"
          :image-width 130)))))
    ;; to find the pivot
    ; (box 
    ;   :halign "start"
    ;   :valign "start"
    ;   :style "
    ;   background-color: red;
    ;   margin-left: 269px;
    ;   margin-right: -270px;
    ;   margin-top: 56px;
    ;   margin-bottom: -57px;
    ;   ")))
      
