(defvar themefiletmp "")

(defwidget themewid [] 
  (scroll
    :hscroll false 
    :vscroll true 
    :vexpand true
    :hexpand true
    (box 
      :class "widget transparent"
      :style "margin: 15px;"
      :orientation "v"
      :space-evenly false 
      :spacing 10
      :hexpand true
      (label 
        :xalign 0
        :markup "<span size='large' weight='bold'>Theme</span>")
      (box
        :orientation "v"
        :space-evenly false
        :class "widget"
        (label 
          :style "margin: 10px;"
          :xalign 0
          :wrap true
          :markup "Selects a file from <span background='${theme.overlay}'>./themes/</span> and applies the colors from that file.")
        (combobox
          :text {theme.name}
          :items {presetthemes}
          :onchange "./bin/set_theme.sh {}"))
          ; (button 
          ;   :class "urgentwid"
          ;   :onclick {themefiletmp != "" ? "./bin/set_theme.sh ${themefiletmp}" : ""}
          ;   (label 
          ;     :style "margin: 0 15px;"
          ;     :markup "Reload"))))
      
      (label
        :xalign 0 
        :markup "<span size='large' weight='bold'>Wallpaper</span>")
      (wallwidget)
      (label 
        :xalign 0
        :markup "<span size='large' weight='bold'>Colors</span>")
      (themecolors))))

(defwidget wallwidget []
  (box 
    :orientation "v"
    :space-evenly "false"
    (tailcont
      (box 
        :class "wallpaperbox"
        :style 'background-image: url("${wallpaperpath}");'
        :height 175)
      (box
        :orientation "v"
        :space-evenly false
        :hexpand true
        (label
          :style "margin: 5px;"
          :markup "<b>${search(wallpaperpath, '[^\\/]+$')[0]}</b>")
        (box 
          :halign "center"
          :orientation "h"
          (button 
            :class "interactive"
            :style "margin-left: 0;"
            :onclick "${EWW_CMD} update wallpaperpath=$(zenity --file-selection --title 'Select Wallpaper' --file-filter='Image files (png, jpg) | *.png *.jpg *.jpeg') &"
            (label 
              :style "margin: 0 15px;"
              :markup "Select"))
          (button 
            :class "interactive hard"
            :style "margin-right: 0;"
            :onclick "./bin/wallset.sh set ${wallpaperpath}"
            (label 
              :markup "Apply")))))))
      

(defwidget themecolors [] 
  (box 
    :orientation "v"
    :space-evenly false 
    (headcont
      (box 
        :orientation "h"
        :space-evenly false 
        :hexpand true
        (box 
          :orientation "v"
          :hexpand true
          (combobox 
            :text {colorjson.key} 
            :items {presetcolorkeys}
            :onchange "./scripts/colormap.py update {}")
          (box
            :class "widget"
            :style "margin-left: 0px;"
            (input 
              :value {colorjson.val}
              :onaccept "./scripts/colormap.py set ${colorjson.key} '{}'")))
        (box
          :width 94
          :class "colorbox"
          :style "margin-right: 0px;"
          :style "background-color: ${colorjson.hex};"))
      (box 
        :height 100
        :halign "center"
        (box 
          :orientation "h"
          :space-evenly false
          (box 
            :hexpand true
            :orientation "v"
            :space-evenly false
            (box 
              :orientation "h"
              (box 
                :class "colorswidbox bar"
                :style "background-color: ${theme.overlay};"
                (transform
                  :transform-origin-x "50%"
                  :transform-origin-y "50%"
                  :rotate 25
                  (image 
                    :image-width 25
                    :path "./assets/icons/chevronright.svg")))
              (box 
                :class "urgentwid bar"
                (image 
                  :image-width 25 
                  :path "./assets/icons/linkw.svg")))
            (box 
              :vexpand true
              :class "colorswidbox bar"
              :style "background-color: ${theme.base};"
              (label 
                :text "text")))
          (box
            :hexpand true
            :orientation "v"
            :space-evenly true
            :width 120
            :vexpand true
            (button 
              :class "urgentwid bar"
              (label 
                :text "Button"))

            (button 
              :class "colorswidbox bar"
              :style "background-color: ${theme.base};"
              (scroll
                :hscroll true 
                :vscroll false 
                :vexpand true 
                :active false
                (label 
                  :text "lorem ipsum dolor sit amet."))))
                
              
          (box 
            :width 15 
            :style "
            background-color: ${theme.highlight}; 
            border-radius: 10px; 
            margin: 5px 5px 5px 5px;"
            (box 
              :style "
              background-color: ${theme.subtle};
              border-radius: 10px;
              margin-bottom: 60px;
              ")))))))
          

(defwidget combobox [text items onchange]
  (box
    :hexpand true
    :class "interactive"
    (overlay 
      (combo-box-text 
        :items items 
        :onchange onchange)
      (label 
        :hexpand true 
        :xalign 0
        :class "solidlabelcover"
        :markup text))))

(defwidget themecolorpick [type]
  (box 
    :orientation "h"
    :space-evenly false 
    :spacing 10
    (color-button 
      :class "colorbox"
      :style "background-color: ${theme[type]};"
      :use-alpha false 
      :onchange "./scripts/themectl.py set_col ${type} '{}'")
    (label 
      :markup {type})))
