(deflisten notificationsanchor "jq -r '.notifications' ~/.cache/eww/winpositions.json")

(defwindow notifications 
  :geometry (geometry 
              :x 0 
              :y -10 
              :width 300 
              :height 0
              :anchor "bottom center")
  :stacking "fg"
  :exclusive false
  :monitor 0 
  :wm-ignore false 
  :windowtype "dock"
  (box
    :orientation "v"
    :space-evenly false
    :valign {matches(notificationsanchor, "top") ? "start" : "end"}
    (box 
      :orientation "v"
      :space-evenly false 
      ; :spacing 10
      ; (for i in {picomrunning ? [0, 1, 2] : [0]}
      ;   (singlenotif 
      ;     :noti {
      ;            i < arraylength(notifications.popups)
      ;            ? notifications.popups[i]
      ;            : '{
      ;                "id": -727, 
      ;                "app": "",
      ;                "summary": "",
      ;                "body": "",
      ;                "time": "07:27",
      ;                "actions": [],
      ;                "icon": null,
      ;                "image": null, 
      ;                "tleft": 0}
      ;            '})))))
      (for n in {picomrunning ? notifications.popups : 
                 arraylength(notifications.popups) > 0 ?
                 [notifications.popups[0]] : []}
        (singlenotif 
          :noti n)))))

; (defvar revealnotificationlog false)

(defwindow notificationlog 
  :geometry (geometry
              :x -20 
              :y 20 
              :width 420 
              :height 500
              :anchor "top right")
  :stacking "fg"
  :exclusive false 
  :monitor 0 
  :wm-ignore false 
  :windowtype "dock"
  :focusable true
  (box 
    :orientation "h"
    :space-evenly false 
    (box 
      :hexpand true)
    ; (revealer 
    ;   :halign "end"
    ;   :reveal revealnotificationlog
    ;   :transition "slideleft"
    ;   :duration {picomrunning ? 500 : 0}
    (eventbox
      :onhoverlost "./scripts/winpos.sh notificationlog close &"
      (box 
        :width 420 
        :height 320 
        :class "popup ${picomrunning ? '': 'square'}"
        :style "padding: 0px;"
        (notiflogwid)))))
        
                     
